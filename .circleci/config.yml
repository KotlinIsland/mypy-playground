version: 2
jobs:
  build-and-test-app:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps-app-{{ .Branch }}-{{ checksum "app/Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install --dev --system
          working_directory: app
      - save_cache:
          key: deps-app-{{ .Branch }}-{{ checksum "app/Pipfile.lock" }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          command: pipenv run test
          working_directory: app

  build-and-test-frontend:
    docker:
      - image: node:10.16

    steps:
      - checkout
      - restore_cache:
          key: deps-frontend-{{ checksum "app/frontend/package-lock.json" }}
      - run:
          command: npm ci
          working_directory: app/frontend
      - save_cache:
          key: deps-frontend-{{ checksum "app/frontend/package-lock.json" }}
          paths:
            - app/frontend/node_modules
      - run:
          command: npm run build
          working_directory: app/frontend
      - run:
          command: npm run lint
          working_directory: app/frontend
      - run:
          command: npm test
          working_directory: app/frontend

  build-and-push-docker-images:
    docker:
      - image: docker:git

    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: docker build -t app -f ./app/Dockerfile-prod ./app
      - run:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
              docker tag app "ymyzk/mypy-playground:latest"
              docker push "ymyzk/mypy-playground:latest"
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test-app
      - build-and-test-frontend
      - build-and-push-docker-images:
          requires:
            - build-and-test-app
            - build-and-test-frontend
